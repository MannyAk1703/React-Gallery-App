{"version":3,"sources":["Components/Nav.js","Components/SearchForm.js","Components/Photo.js","Components/NotFound.js","Components/PhotoContainer.js","Components/PageNotFound.js","App.js","config.js","reportWebVitals.js","index.js"],"names":["Nav","className","exact","to","SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","query","props","history","push","onSearch","currentTarget","reset","onSubmit","this","type","onChange","ref","input","name","placeholder","fill","height","viewBox","width","xmlns","d","Component","withRouter","Photo","src","url","alt","NotFound","PhotoContainer","createUrl","server","id","secret","data","length","title","map","photo","PageNotFound","App","photoSearch","axios","get","api","then","response","photos","catch","error","console","log","superman","marvel","sports","basename","render","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9818110b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n//Routes for Superman, Marvel and Sports\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"main-nav\">\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/superman\">\r\n            Superman\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/marvel\">\r\n            Marvel\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/sports\">\r\n            Sports\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass SearchForm extends Component {\r\n  state = {\r\n    searchText: \"\",\r\n  };\r\n  //Function that\r\n  onSearchChange = (e) => {\r\n    this.setState({ searchText: e.target.value });\r\n  };\r\n  //This Fucntion takes the input from the previous function and passes it through the onSearch function which is a callback function photosearch\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let query = this.query.value;\r\n    let path = ``;\r\n    //adds the empty string to the url so it can reload\r\n    this.props.history.push(path);\r\n    this.props.onSearch(query);\r\n    e.currentTarget.reset();\r\n  };\r\n  //Renders Search Form\r\n  render() {\r\n    return (\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"search\"\r\n          onChange={this.onSearchChange}\r\n          ref={(input) => (this.query = input)}\r\n          name=\"search\"\r\n          placeholder=\"Search...\"\r\n        />\r\n        <button type=\"submit\" className=\"search-button\">\r\n          <svg\r\n            fill=\"#fff\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 23 23\"\r\n            width=\"24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(SearchForm);\r\n","import React from \"react\";\r\n\r\n//Renders a list item where photos are to be contained\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <li>\r\n      <img src={props.url} alt=\"\" />\r\n      <img />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n","import React from \"react\";\r\n//Component for results not found\r\nconst NotFound = () => (\r\n  <div className=\"main-content not-found\">\r\n    <h3>No Results Found</h3>\r\n    <p>You search did not return any results. Please try again.</p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport Photo from \"./Photo\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nclass PhotoContainer extends Component {\r\n  //Specific URL for each image\r\n  createUrl = (server, id, secret) => {\r\n    return `https://live.staticflickr.com/${server}/${id}_${secret}.jpg`;\r\n  };\r\n\r\n  // Renders picture into container using map function\r\n  render() {\r\n    const results = this.props.data;\r\n\r\n    if (results.length > 0) {\r\n      return (\r\n        <div className=\"photo-container\">\r\n          <p>{this.props.title} results </p>\r\n          {/* Creates a list item for each image and adds a key and title */}\r\n          <ul>\r\n            {this.props.data.map((photo) => (\r\n              <Photo\r\n                url={this.createUrl(photo.server, photo.id, photo.secret)}\r\n                key={photo.id}\r\n                alt={photo.title}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      //If no search found\r\n      return (\r\n        <div className=\"photo-container\">\r\n          <NotFound />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default PhotoContainer;\r\n","import React from \"react\";\r\n//Component for page not found\r\nconst PageNotFound = () => (\r\n  <div className=\"not-found\">\r\n    <h1> Page Not Found </h1>\r\n  </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Nav from \"./Components/Nav\";\nimport SearchForm from \"./Components/SearchForm\";\nimport PhotoContainer from \"./Components/PhotoContainer\";\nimport PageNotFound from \"./Components/PageNotFound\";\nimport apiKey from \"./config\";\n\n//All major components rendered here\nexport default class App extends Component {\n  constructor() {\n    //states defined\n    super();\n    this.state = {\n      photos: [],\n      superman: [],\n      marvel: [],\n      sports: [],\n      api: apiKey,\n    };\n  }\n\n  componentDidMount() {\n    this.photoSearch();\n    //this fetches the search input json data for superman tag and adds it to the state\n    axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${this.state.api}&per_page=24&page=1&tags=superman&format=json&nojsoncallback=1`\n      )\n      .then((response) => {\n        this.setState({\n          superman: response.data.photos.photo,\n          title: \"superman\",\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n    //this fetches the search input json data for marvel tag and adds it to the state\n    axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${this.state.api}&per_page=24&page=1&tags=marvel&format=json&nojsoncallback=1`\n      )\n      .then((response) => {\n        this.setState({\n          marvel: response.data.photos.photo,\n          title: \"marvel\",\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n\n    //this fetches the search input json data for sports tag and adds it to the state\n    axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${this.state.api}&per_page=24&page=1&tags=sports&format=json&nojsoncallback=1`\n      )\n      .then((response) => {\n        this.setState({\n          sports: response.data.photos.photo,\n          title: \"sports\",\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  }\n  //this function fetches the search input json data with the default search being 'Pets and adds it to the state\n  photoSearch = (query = \"Pets\") => {\n    axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${this.state.api}&per_page=24&page=1&tags=${query}&format=json&nojsoncallback=1`\n      )\n      .then((response) => {\n        this.setState({\n          photos: response.data.photos.photo,\n          query: `${query}`,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n  //React Components inserted as well as Routes\n  render() {\n    return (\n      <HashRouter basename=\"/React-Gallery-App/\">\n        <div>\n          <h1>React Gallery App</h1>\n          <Route render={() => <SearchForm onSearch={this.photoSearch} />} />\n\n          <Nav />\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <PhotoContainer\n                  data={this.state.photos}\n                  title={this.state.query}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/superman\"\n              render={() => (\n                <PhotoContainer data={this.state.superman} title={\"Superman\"} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/marvel\"\n              render={() => (\n                <PhotoContainer data={this.state.marvel} title={\"Marvel\"} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/sports\"\n              render={() => (\n                <PhotoContainer data={this.state.sports} title={\"Sports\"} />\n              )}\n            />\n\n            <Route\n              path=\"/search/:topic\"\n              render={(props) => <PhotoContainer data={this.state.photos} />}\n            />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n","const apiKey = \"5f1473037a75194f053498783892f88e\";\r\nexport default apiKey;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}